// Code generated by protoc-gen-go. DO NOT EDIT.
// source: yotta.proto

package protosvr

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type CardHolderResponse struct {
	Items                []*CardHolder `protobuf:"bytes,1,rep,name=items,proto3" json:"items,omitempty"`
	XXX_NoUnkeyedLiteral struct{}      `json:"-"`
	XXX_unrecognized     []byte        `json:"-"`
	XXX_sizecache        int32         `json:"-"`
}

func (m *CardHolderResponse) Reset()         { *m = CardHolderResponse{} }
func (m *CardHolderResponse) String() string { return proto.CompactTextString(m) }
func (*CardHolderResponse) ProtoMessage()    {}
func (*CardHolderResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf34627dece7832d, []int{0}
}

func (m *CardHolderResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardHolderResponse.Unmarshal(m, b)
}
func (m *CardHolderResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardHolderResponse.Marshal(b, m, deterministic)
}
func (m *CardHolderResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardHolderResponse.Merge(m, src)
}
func (m *CardHolderResponse) XXX_Size() int {
	return xxx_messageInfo_CardHolderResponse.Size(m)
}
func (m *CardHolderResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_CardHolderResponse.DiscardUnknown(m)
}

var xxx_messageInfo_CardHolderResponse proto.InternalMessageInfo

func (m *CardHolderResponse) GetItems() []*CardHolder {
	if m != nil {
		return m.Items
	}
	return nil
}

type CardHolder struct {
	BaseInfoSeg          *CardHolder_BASEINFOSEG   `protobuf:"bytes,1,opt,name=BaseInfoSeg,proto3" json:"BaseInfoSeg,omitempty"`
	LimitUsageSeg        *CardHolder_LIMITUSAGESEG `protobuf:"bytes,2,opt,name=LimitUsageSeg,proto3" json:"LimitUsageSeg,omitempty"`
	AnnualFeeSeg         *CardHolder_ANNUALFEESEG  `protobuf:"bytes,3,opt,name=AnnualFeeSeg,proto3" json:"AnnualFeeSeg,omitempty"`
	ReplCard             string                    `protobuf:"bytes,4,opt,name=ReplCard,proto3" json:"ReplCard,omitempty"`
	EMVSeg               *CardHolder_EMVSEG        `protobuf:"bytes,5,opt,name=EMVSeg,proto3" json:"EMVSeg,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                  `json:"-"`
	XXX_unrecognized     []byte                    `json:"-"`
	XXX_sizecache        int32                     `json:"-"`
}

func (m *CardHolder) Reset()         { *m = CardHolder{} }
func (m *CardHolder) String() string { return proto.CompactTextString(m) }
func (*CardHolder) ProtoMessage()    {}
func (*CardHolder) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf34627dece7832d, []int{1}
}

func (m *CardHolder) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardHolder.Unmarshal(m, b)
}
func (m *CardHolder) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardHolder.Marshal(b, m, deterministic)
}
func (m *CardHolder) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardHolder.Merge(m, src)
}
func (m *CardHolder) XXX_Size() int {
	return xxx_messageInfo_CardHolder.Size(m)
}
func (m *CardHolder) XXX_DiscardUnknown() {
	xxx_messageInfo_CardHolder.DiscardUnknown(m)
}

var xxx_messageInfo_CardHolder proto.InternalMessageInfo

func (m *CardHolder) GetBaseInfoSeg() *CardHolder_BASEINFOSEG {
	if m != nil {
		return m.BaseInfoSeg
	}
	return nil
}

func (m *CardHolder) GetLimitUsageSeg() *CardHolder_LIMITUSAGESEG {
	if m != nil {
		return m.LimitUsageSeg
	}
	return nil
}

func (m *CardHolder) GetAnnualFeeSeg() *CardHolder_ANNUALFEESEG {
	if m != nil {
		return m.AnnualFeeSeg
	}
	return nil
}

func (m *CardHolder) GetReplCard() string {
	if m != nil {
		return m.ReplCard
	}
	return ""
}

func (m *CardHolder) GetEMVSeg() *CardHolder_EMVSEG {
	if m != nil {
		return m.EMVSeg
	}
	return nil
}

type CardHolder_BASEINFOSEG struct {
	CardNo               string                             `protobuf:"bytes,1,opt,name=CardNo,proto3" json:"CardNo,omitempty"`
	CardType             string                             `protobuf:"bytes,2,opt,name=CardType,proto3" json:"CardType,omitempty"`
	FIID                 string                             `protobuf:"bytes,3,opt,name=FIID,proto3" json:"FIID,omitempty"`
	Status               string                             `protobuf:"bytes,4,opt,name=Status,proto3" json:"Status,omitempty"`
	Accounts             []*CardHolder_BASEINFOSEG_ACCOUNTS `protobuf:"bytes,5,rep,name=Accounts,proto3" json:"Accounts,omitempty"`
	PinOffset            string                             `protobuf:"bytes,6,opt,name=PinOffset,proto3" json:"PinOffset,omitempty"`
	ExpiredDate          string                             `protobuf:"bytes,7,opt,name=ExpiredDate,proto3" json:"ExpiredDate,omitempty"`
	EffectiveDate        string                             `protobuf:"bytes,8,opt,name=EffectiveDate,proto3" json:"EffectiveDate,omitempty"`
	LastUsed             string                             `protobuf:"bytes,9,opt,name=LastUsed,proto3" json:"LastUsed,omitempty"`
	HolderName           string                             `protobuf:"bytes,10,opt,name=HolderName,proto3" json:"HolderName,omitempty"`
	AccessCount          int32                              `protobuf:"varint,11,opt,name=AccessCount,proto3" json:"AccessCount,omitempty"`
	BranchNo             string                             `protobuf:"bytes,12,opt,name=BranchNo,proto3" json:"BranchNo,omitempty"`
	Period               int32                              `protobuf:"varint,13,opt,name=Period,proto3" json:"Period,omitempty"`
	EntryFee             float64                            `protobuf:"fixed64,14,opt,name=EntryFee,proto3" json:"EntryFee,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                           `json:"-"`
	XXX_unrecognized     []byte                             `json:"-"`
	XXX_sizecache        int32                              `json:"-"`
}

func (m *CardHolder_BASEINFOSEG) Reset()         { *m = CardHolder_BASEINFOSEG{} }
func (m *CardHolder_BASEINFOSEG) String() string { return proto.CompactTextString(m) }
func (*CardHolder_BASEINFOSEG) ProtoMessage()    {}
func (*CardHolder_BASEINFOSEG) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf34627dece7832d, []int{1, 0}
}

func (m *CardHolder_BASEINFOSEG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardHolder_BASEINFOSEG.Unmarshal(m, b)
}
func (m *CardHolder_BASEINFOSEG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardHolder_BASEINFOSEG.Marshal(b, m, deterministic)
}
func (m *CardHolder_BASEINFOSEG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardHolder_BASEINFOSEG.Merge(m, src)
}
func (m *CardHolder_BASEINFOSEG) XXX_Size() int {
	return xxx_messageInfo_CardHolder_BASEINFOSEG.Size(m)
}
func (m *CardHolder_BASEINFOSEG) XXX_DiscardUnknown() {
	xxx_messageInfo_CardHolder_BASEINFOSEG.DiscardUnknown(m)
}

var xxx_messageInfo_CardHolder_BASEINFOSEG proto.InternalMessageInfo

func (m *CardHolder_BASEINFOSEG) GetCardNo() string {
	if m != nil {
		return m.CardNo
	}
	return ""
}

func (m *CardHolder_BASEINFOSEG) GetCardType() string {
	if m != nil {
		return m.CardType
	}
	return ""
}

func (m *CardHolder_BASEINFOSEG) GetFIID() string {
	if m != nil {
		return m.FIID
	}
	return ""
}

func (m *CardHolder_BASEINFOSEG) GetStatus() string {
	if m != nil {
		return m.Status
	}
	return ""
}

func (m *CardHolder_BASEINFOSEG) GetAccounts() []*CardHolder_BASEINFOSEG_ACCOUNTS {
	if m != nil {
		return m.Accounts
	}
	return nil
}

func (m *CardHolder_BASEINFOSEG) GetPinOffset() string {
	if m != nil {
		return m.PinOffset
	}
	return ""
}

func (m *CardHolder_BASEINFOSEG) GetExpiredDate() string {
	if m != nil {
		return m.ExpiredDate
	}
	return ""
}

func (m *CardHolder_BASEINFOSEG) GetEffectiveDate() string {
	if m != nil {
		return m.EffectiveDate
	}
	return ""
}

func (m *CardHolder_BASEINFOSEG) GetLastUsed() string {
	if m != nil {
		return m.LastUsed
	}
	return ""
}

func (m *CardHolder_BASEINFOSEG) GetHolderName() string {
	if m != nil {
		return m.HolderName
	}
	return ""
}

func (m *CardHolder_BASEINFOSEG) GetAccessCount() int32 {
	if m != nil {
		return m.AccessCount
	}
	return 0
}

func (m *CardHolder_BASEINFOSEG) GetBranchNo() string {
	if m != nil {
		return m.BranchNo
	}
	return ""
}

func (m *CardHolder_BASEINFOSEG) GetPeriod() int32 {
	if m != nil {
		return m.Period
	}
	return 0
}

func (m *CardHolder_BASEINFOSEG) GetEntryFee() float64 {
	if m != nil {
		return m.EntryFee
	}
	return 0
}

type CardHolder_BASEINFOSEG_ACCOUNTS struct {
	AccountProdCode      string   `protobuf:"bytes,1,opt,name=AccountProdCode,proto3" json:"AccountProdCode,omitempty"`
	AccountNo            string   `protobuf:"bytes,2,opt,name=AccountNo,proto3" json:"AccountNo,omitempty"`
	AccountBr            string   `protobuf:"bytes,3,opt,name=AccountBr,proto3" json:"AccountBr,omitempty"`
	Priority             float64  `protobuf:"fixed64,4,opt,name=Priority,proto3" json:"Priority,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardHolder_BASEINFOSEG_ACCOUNTS) Reset()         { *m = CardHolder_BASEINFOSEG_ACCOUNTS{} }
func (m *CardHolder_BASEINFOSEG_ACCOUNTS) String() string { return proto.CompactTextString(m) }
func (*CardHolder_BASEINFOSEG_ACCOUNTS) ProtoMessage()    {}
func (*CardHolder_BASEINFOSEG_ACCOUNTS) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf34627dece7832d, []int{1, 0, 0}
}

func (m *CardHolder_BASEINFOSEG_ACCOUNTS) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardHolder_BASEINFOSEG_ACCOUNTS.Unmarshal(m, b)
}
func (m *CardHolder_BASEINFOSEG_ACCOUNTS) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardHolder_BASEINFOSEG_ACCOUNTS.Marshal(b, m, deterministic)
}
func (m *CardHolder_BASEINFOSEG_ACCOUNTS) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardHolder_BASEINFOSEG_ACCOUNTS.Merge(m, src)
}
func (m *CardHolder_BASEINFOSEG_ACCOUNTS) XXX_Size() int {
	return xxx_messageInfo_CardHolder_BASEINFOSEG_ACCOUNTS.Size(m)
}
func (m *CardHolder_BASEINFOSEG_ACCOUNTS) XXX_DiscardUnknown() {
	xxx_messageInfo_CardHolder_BASEINFOSEG_ACCOUNTS.DiscardUnknown(m)
}

var xxx_messageInfo_CardHolder_BASEINFOSEG_ACCOUNTS proto.InternalMessageInfo

func (m *CardHolder_BASEINFOSEG_ACCOUNTS) GetAccountProdCode() string {
	if m != nil {
		return m.AccountProdCode
	}
	return ""
}

func (m *CardHolder_BASEINFOSEG_ACCOUNTS) GetAccountNo() string {
	if m != nil {
		return m.AccountNo
	}
	return ""
}

func (m *CardHolder_BASEINFOSEG_ACCOUNTS) GetAccountBr() string {
	if m != nil {
		return m.AccountBr
	}
	return ""
}

func (m *CardHolder_BASEINFOSEG_ACCOUNTS) GetPriority() float64 {
	if m != nil {
		return m.Priority
	}
	return 0
}

type CardHolder_LIMITUSAGESEG struct {
	TodayWithdrawAmt      float64  `protobuf:"fixed64,1,opt,name=TodayWithdrawAmt,proto3" json:"TodayWithdrawAmt,omitempty"`
	TodayTransferAmt      float64  `protobuf:"fixed64,2,opt,name=TodayTransferAmt,proto3" json:"TodayTransferAmt,omitempty"`
	TodayPurchaseAmt      float64  `protobuf:"fixed64,3,opt,name=TodayPurchaseAmt,proto3" json:"TodayPurchaseAmt,omitempty"`
	TodayWithdrawCount    int32    `protobuf:"varint,4,opt,name=TodayWithdrawCount,proto3" json:"TodayWithdrawCount,omitempty"`
	TodayTransferCount    int32    `protobuf:"varint,5,opt,name=TodayTransferCount,proto3" json:"TodayTransferCount,omitempty"`
	TodayPurchaseCount    int32    `protobuf:"varint,6,opt,name=TodayPurchaseCount,proto3" json:"TodayPurchaseCount,omitempty"`
	MaxLimitWithdrawAmt   float64  `protobuf:"fixed64,7,opt,name=MaxLimitWithdrawAmt,proto3" json:"MaxLimitWithdrawAmt,omitempty"`
	MaxLimitTransferAmt   float64  `protobuf:"fixed64,8,opt,name=MaxLimitTransferAmt,proto3" json:"MaxLimitTransferAmt,omitempty"`
	MaxLimitPurchaseAmt   float64  `protobuf:"fixed64,9,opt,name=MaxLimitPurchaseAmt,proto3" json:"MaxLimitPurchaseAmt,omitempty"`
	MaxLimitWithdrawCount int32    `protobuf:"varint,10,opt,name=MaxLimitWithdrawCount,proto3" json:"MaxLimitWithdrawCount,omitempty"`
	MaxLimitTransferCount int32    `protobuf:"varint,11,opt,name=MaxLimitTransferCount,proto3" json:"MaxLimitTransferCount,omitempty"`
	MaxLimitPurchaseCount int32    `protobuf:"varint,12,opt,name=MaxLimitPurchaseCount,proto3" json:"MaxLimitPurchaseCount,omitempty"`
	XXX_NoUnkeyedLiteral  struct{} `json:"-"`
	XXX_unrecognized      []byte   `json:"-"`
	XXX_sizecache         int32    `json:"-"`
}

func (m *CardHolder_LIMITUSAGESEG) Reset()         { *m = CardHolder_LIMITUSAGESEG{} }
func (m *CardHolder_LIMITUSAGESEG) String() string { return proto.CompactTextString(m) }
func (*CardHolder_LIMITUSAGESEG) ProtoMessage()    {}
func (*CardHolder_LIMITUSAGESEG) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf34627dece7832d, []int{1, 1}
}

func (m *CardHolder_LIMITUSAGESEG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardHolder_LIMITUSAGESEG.Unmarshal(m, b)
}
func (m *CardHolder_LIMITUSAGESEG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardHolder_LIMITUSAGESEG.Marshal(b, m, deterministic)
}
func (m *CardHolder_LIMITUSAGESEG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardHolder_LIMITUSAGESEG.Merge(m, src)
}
func (m *CardHolder_LIMITUSAGESEG) XXX_Size() int {
	return xxx_messageInfo_CardHolder_LIMITUSAGESEG.Size(m)
}
func (m *CardHolder_LIMITUSAGESEG) XXX_DiscardUnknown() {
	xxx_messageInfo_CardHolder_LIMITUSAGESEG.DiscardUnknown(m)
}

var xxx_messageInfo_CardHolder_LIMITUSAGESEG proto.InternalMessageInfo

func (m *CardHolder_LIMITUSAGESEG) GetTodayWithdrawAmt() float64 {
	if m != nil {
		return m.TodayWithdrawAmt
	}
	return 0
}

func (m *CardHolder_LIMITUSAGESEG) GetTodayTransferAmt() float64 {
	if m != nil {
		return m.TodayTransferAmt
	}
	return 0
}

func (m *CardHolder_LIMITUSAGESEG) GetTodayPurchaseAmt() float64 {
	if m != nil {
		return m.TodayPurchaseAmt
	}
	return 0
}

func (m *CardHolder_LIMITUSAGESEG) GetTodayWithdrawCount() int32 {
	if m != nil {
		return m.TodayWithdrawCount
	}
	return 0
}

func (m *CardHolder_LIMITUSAGESEG) GetTodayTransferCount() int32 {
	if m != nil {
		return m.TodayTransferCount
	}
	return 0
}

func (m *CardHolder_LIMITUSAGESEG) GetTodayPurchaseCount() int32 {
	if m != nil {
		return m.TodayPurchaseCount
	}
	return 0
}

func (m *CardHolder_LIMITUSAGESEG) GetMaxLimitWithdrawAmt() float64 {
	if m != nil {
		return m.MaxLimitWithdrawAmt
	}
	return 0
}

func (m *CardHolder_LIMITUSAGESEG) GetMaxLimitTransferAmt() float64 {
	if m != nil {
		return m.MaxLimitTransferAmt
	}
	return 0
}

func (m *CardHolder_LIMITUSAGESEG) GetMaxLimitPurchaseAmt() float64 {
	if m != nil {
		return m.MaxLimitPurchaseAmt
	}
	return 0
}

func (m *CardHolder_LIMITUSAGESEG) GetMaxLimitWithdrawCount() int32 {
	if m != nil {
		return m.MaxLimitWithdrawCount
	}
	return 0
}

func (m *CardHolder_LIMITUSAGESEG) GetMaxLimitTransferCount() int32 {
	if m != nil {
		return m.MaxLimitTransferCount
	}
	return 0
}

func (m *CardHolder_LIMITUSAGESEG) GetMaxLimitPurchaseCount() int32 {
	if m != nil {
		return m.MaxLimitPurchaseCount
	}
	return 0
}

type CardHolder_ANNUALFEESEG struct {
	NextDueDate          string                                    `protobuf:"bytes,1,opt,name=NextDueDate,proto3" json:"NextDueDate,omitempty"`
	AnnualFeeJournal     *CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL `protobuf:"bytes,2,opt,name=AnnualFeeJournal,proto3" json:"AnnualFeeJournal,omitempty"`
	XXX_NoUnkeyedLiteral struct{}                                  `json:"-"`
	XXX_unrecognized     []byte                                    `json:"-"`
	XXX_sizecache        int32                                     `json:"-"`
}

func (m *CardHolder_ANNUALFEESEG) Reset()         { *m = CardHolder_ANNUALFEESEG{} }
func (m *CardHolder_ANNUALFEESEG) String() string { return proto.CompactTextString(m) }
func (*CardHolder_ANNUALFEESEG) ProtoMessage()    {}
func (*CardHolder_ANNUALFEESEG) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf34627dece7832d, []int{1, 2}
}

func (m *CardHolder_ANNUALFEESEG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardHolder_ANNUALFEESEG.Unmarshal(m, b)
}
func (m *CardHolder_ANNUALFEESEG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardHolder_ANNUALFEESEG.Marshal(b, m, deterministic)
}
func (m *CardHolder_ANNUALFEESEG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardHolder_ANNUALFEESEG.Merge(m, src)
}
func (m *CardHolder_ANNUALFEESEG) XXX_Size() int {
	return xxx_messageInfo_CardHolder_ANNUALFEESEG.Size(m)
}
func (m *CardHolder_ANNUALFEESEG) XXX_DiscardUnknown() {
	xxx_messageInfo_CardHolder_ANNUALFEESEG.DiscardUnknown(m)
}

var xxx_messageInfo_CardHolder_ANNUALFEESEG proto.InternalMessageInfo

func (m *CardHolder_ANNUALFEESEG) GetNextDueDate() string {
	if m != nil {
		return m.NextDueDate
	}
	return ""
}

func (m *CardHolder_ANNUALFEESEG) GetAnnualFeeJournal() *CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL {
	if m != nil {
		return m.AnnualFeeJournal
	}
	return nil
}

type CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL struct {
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL) Reset() {
	*m = CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL{}
}
func (m *CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL) String() string { return proto.CompactTextString(m) }
func (*CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL) ProtoMessage()    {}
func (*CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf34627dece7832d, []int{1, 2, 0}
}

func (m *CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL.Unmarshal(m, b)
}
func (m *CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL.Marshal(b, m, deterministic)
}
func (m *CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL.Merge(m, src)
}
func (m *CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL) XXX_Size() int {
	return xxx_messageInfo_CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL.Size(m)
}
func (m *CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL) XXX_DiscardUnknown() {
	xxx_messageInfo_CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL.DiscardUnknown(m)
}

var xxx_messageInfo_CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL proto.InternalMessageInfo

type CardHolder_EMVSEG struct {
	ChipFlag             bool     `protobuf:"varint,1,opt,name=ChipFlag,proto3" json:"ChipFlag,omitempty"`
	ChipATC              int32    `protobuf:"varint,2,opt,name=ChipATC,proto3" json:"ChipATC,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *CardHolder_EMVSEG) Reset()         { *m = CardHolder_EMVSEG{} }
func (m *CardHolder_EMVSEG) String() string { return proto.CompactTextString(m) }
func (*CardHolder_EMVSEG) ProtoMessage()    {}
func (*CardHolder_EMVSEG) Descriptor() ([]byte, []int) {
	return fileDescriptor_cf34627dece7832d, []int{1, 3}
}

func (m *CardHolder_EMVSEG) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_CardHolder_EMVSEG.Unmarshal(m, b)
}
func (m *CardHolder_EMVSEG) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_CardHolder_EMVSEG.Marshal(b, m, deterministic)
}
func (m *CardHolder_EMVSEG) XXX_Merge(src proto.Message) {
	xxx_messageInfo_CardHolder_EMVSEG.Merge(m, src)
}
func (m *CardHolder_EMVSEG) XXX_Size() int {
	return xxx_messageInfo_CardHolder_EMVSEG.Size(m)
}
func (m *CardHolder_EMVSEG) XXX_DiscardUnknown() {
	xxx_messageInfo_CardHolder_EMVSEG.DiscardUnknown(m)
}

var xxx_messageInfo_CardHolder_EMVSEG proto.InternalMessageInfo

func (m *CardHolder_EMVSEG) GetChipFlag() bool {
	if m != nil {
		return m.ChipFlag
	}
	return false
}

func (m *CardHolder_EMVSEG) GetChipATC() int32 {
	if m != nil {
		return m.ChipATC
	}
	return 0
}

func init() {
	proto.RegisterType((*CardHolderResponse)(nil), "protosvr.CardHolderResponse")
	proto.RegisterType((*CardHolder)(nil), "protosvr.CardHolder")
	proto.RegisterType((*CardHolder_BASEINFOSEG)(nil), "protosvr.CardHolder.BASEINFOSEG")
	proto.RegisterType((*CardHolder_BASEINFOSEG_ACCOUNTS)(nil), "protosvr.CardHolder.BASEINFOSEG.ACCOUNTS")
	proto.RegisterType((*CardHolder_LIMITUSAGESEG)(nil), "protosvr.CardHolder.LIMITUSAGESEG")
	proto.RegisterType((*CardHolder_ANNUALFEESEG)(nil), "protosvr.CardHolder.ANNUALFEESEG")
	proto.RegisterType((*CardHolder_ANNUALFEESEG_ANNUALFEEJOURNAL)(nil), "protosvr.CardHolder.ANNUALFEESEG.ANNUALFEEJOURNAL")
	proto.RegisterType((*CardHolder_EMVSEG)(nil), "protosvr.CardHolder.EMVSEG")
}

func init() { proto.RegisterFile("yotta.proto", fileDescriptor_cf34627dece7832d) }

var fileDescriptor_cf34627dece7832d = []byte{
	// 826 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0x94, 0x55, 0xdd, 0x8e, 0xe2, 0x36,
	0x14, 0xde, 0xec, 0x00, 0x03, 0x27, 0xd0, 0x8e, 0xdc, 0x1f, 0x45, 0xe9, 0xaa, 0xa2, 0xa8, 0x17,
	0x74, 0x2f, 0x50, 0x35, 0x53, 0xf5, 0xae, 0x55, 0x03, 0x13, 0x58, 0x56, 0x4c, 0x86, 0x1a, 0x68,
	0xd5, 0x9b, 0x4a, 0x6e, 0x72, 0x58, 0x22, 0x41, 0x8c, 0x1c, 0x33, 0x1d, 0xde, 0xa1, 0x8f, 0xd1,
	0x17, 0xea, 0x55, 0x2f, 0xfa, 0x10, 0x7d, 0x85, 0xca, 0x4e, 0x08, 0xce, 0x6c, 0xaa, 0xd5, 0x5e,
	0x91, 0xf3, 0x9d, 0xef, 0xfb, 0xce, 0xf1, 0x31, 0xb6, 0xc1, 0x3e, 0x72, 0x29, 0xd9, 0x60, 0x2f,
	0xb8, 0xe4, 0xa4, 0xa9, 0x7f, 0xd2, 0x07, 0xd1, 0xfb, 0x01, 0xc8, 0x88, 0x89, 0xe8, 0x15, 0xdf,
	0x46, 0x28, 0x28, 0xa6, 0x7b, 0x9e, 0xa4, 0x48, 0x5e, 0x42, 0x3d, 0x96, 0xb8, 0x4b, 0x1d, 0xab,
	0x7b, 0xd1, 0xb7, 0xaf, 0x3f, 0x1e, 0x9c, 0xf8, 0x03, 0x83, 0x9c, 0x51, 0x7a, 0x7f, 0x75, 0x00,
	0xce, 0x28, 0x19, 0x82, 0x3d, 0x64, 0x29, 0x4e, 0x93, 0x35, 0x5f, 0xe0, 0x1b, 0xc7, 0xea, 0x5a,
	0x7d, 0xfb, 0xba, 0x5b, 0x65, 0x30, 0x18, 0x7a, 0x0b, 0x7f, 0x1a, 0x8c, 0xef, 0x17, 0xfe, 0x84,
	0x9a, 0x22, 0xf2, 0x0a, 0x3a, 0xb3, 0x78, 0x17, 0xcb, 0x55, 0xca, 0xde, 0xa0, 0x72, 0x79, 0xae,
	0x5d, 0x7a, 0x95, 0x2e, 0xb3, 0xe9, 0xdd, 0x74, 0xb9, 0x5a, 0x78, 0x13, 0x5f, 0xf9, 0x94, 0x85,
	0xc4, 0x87, 0xb6, 0x97, 0x24, 0x07, 0xb6, 0x1d, 0xa3, 0x36, 0xba, 0xd0, 0x46, 0x5f, 0x54, 0x1a,
	0x79, 0x41, 0xb0, 0xf2, 0x66, 0x63, 0x5f, 0xfb, 0x94, 0x64, 0xc4, 0x85, 0x26, 0xc5, 0xfd, 0x56,
	0x91, 0x9d, 0x5a, 0xd7, 0xea, 0xb7, 0x68, 0x11, 0x93, 0x1b, 0x68, 0xf8, 0x77, 0x3f, 0x29, 0xf3,
	0xba, 0x36, 0xff, 0xac, 0xd2, 0x5c, 0x51, 0xfc, 0x09, 0xcd, 0xa9, 0xee, 0xdf, 0x35, 0xb0, 0x8d,
	0xe5, 0x93, 0x4f, 0xa1, 0xa1, 0xc8, 0x01, 0xd7, 0x03, 0x6b, 0xd1, 0x3c, 0x52, 0x85, 0xd5, 0xd7,
	0xf2, 0xb8, 0x47, 0x3d, 0x84, 0x16, 0x2d, 0x62, 0x42, 0xa0, 0x36, 0x9e, 0x4e, 0x6f, 0xf5, 0x9a,
	0x5a, 0x54, 0x7f, 0x2b, 0x9f, 0x85, 0x64, 0xf2, 0x90, 0xe6, 0x6d, 0xe6, 0x11, 0xf1, 0xa1, 0xe9,
	0x85, 0x21, 0x3f, 0x24, 0x32, 0x75, 0xea, 0x7a, 0x4f, 0xbf, 0x7a, 0xd7, 0x96, 0x0c, 0xbc, 0xd1,
	0xe8, 0x7e, 0x15, 0x2c, 0x17, 0xb4, 0x90, 0x92, 0x17, 0xd0, 0x9a, 0xc7, 0xc9, 0xfd, 0x7a, 0x9d,
	0xa2, 0x74, 0x1a, 0xba, 0xc2, 0x19, 0x20, 0x5d, 0xb0, 0xfd, 0xc7, 0x7d, 0x2c, 0x30, 0xba, 0x65,
	0x12, 0x9d, 0x4b, 0x9d, 0x37, 0x21, 0xf2, 0x25, 0x74, 0xfc, 0xf5, 0x1a, 0x43, 0x19, 0x3f, 0xa0,
	0xe6, 0x34, 0x35, 0xa7, 0x0c, 0xaa, 0x45, 0xcf, 0x58, 0x2a, 0x57, 0x29, 0x46, 0x4e, 0x2b, 0x5b,
	0xf4, 0x29, 0x26, 0x9f, 0x03, 0x64, 0xad, 0x06, 0x6c, 0x87, 0x0e, 0xe8, 0xac, 0x81, 0xa8, 0x1e,
	0xbc, 0x30, 0xc4, 0x34, 0x1d, 0xa9, 0x8e, 0x1d, 0xbb, 0x6b, 0xf5, 0xeb, 0xd4, 0x84, 0x94, 0xfb,
	0x50, 0xb0, 0x24, 0xdc, 0x04, 0xdc, 0x69, 0x67, 0xee, 0xa7, 0x58, 0x8d, 0x6f, 0x8e, 0x22, 0xe6,
	0x91, 0xd3, 0xd1, 0xc2, 0x3c, 0x52, 0x1a, 0x3f, 0x91, 0xe2, 0x38, 0x46, 0x74, 0x3e, 0xe8, 0x5a,
	0x7d, 0x8b, 0x16, 0xb1, 0xfb, 0x87, 0x05, 0xcd, 0xd3, 0xa8, 0x48, 0x1f, 0x3e, 0xcc, 0x87, 0x35,
	0x17, 0x3c, 0x1a, 0xf1, 0x08, 0xf3, 0x0d, 0x7d, 0x0a, 0xab, 0x51, 0xe6, 0x50, 0xc0, 0xf3, 0xad,
	0x3d, 0x03, 0x46, 0x76, 0x28, 0xf2, 0x0d, 0x3e, 0x03, 0xaa, 0x9d, 0xb9, 0x88, 0xb9, 0x88, 0xe5,
	0x51, 0xef, 0xb3, 0x45, 0x8b, 0xd8, 0xfd, 0xa7, 0x06, 0x9d, 0xd2, 0x91, 0x20, 0x2f, 0xe1, 0x6a,
	0xc9, 0x23, 0x76, 0xfc, 0x39, 0x96, 0x9b, 0x48, 0xb0, 0xdf, 0xbd, 0x9d, 0xd4, 0x4d, 0x59, 0xf4,
	0x2d, 0xbc, 0xe0, 0x2e, 0x05, 0x4b, 0xd2, 0x35, 0x0a, 0xc5, 0x7d, 0x6e, 0x70, 0x0d, 0xbc, 0xe0,
	0xce, 0x0f, 0x22, 0xdc, 0xb0, 0x14, 0x15, 0xf7, 0xc2, 0xe0, 0x1a, 0x38, 0x19, 0x00, 0x29, 0xd5,
	0xca, 0x76, 0xa7, 0xa6, 0x87, 0x5c, 0x91, 0x29, 0xf8, 0xa7, 0x7a, 0x19, 0xbf, 0x6e, 0xf0, 0x4b,
	0x99, 0x82, 0x7f, 0xaa, 0x99, 0xf1, 0x1b, 0x06, 0xbf, 0x94, 0x21, 0x5f, 0xc3, 0x47, 0x77, 0xec,
	0x51, 0xdf, 0x15, 0xe6, 0x58, 0x2e, 0x75, 0xfb, 0x55, 0x29, 0x53, 0x61, 0x0e, 0xa7, 0x59, 0x56,
	0x98, 0xf3, 0x31, 0x14, 0xe6, 0x88, 0x5a, 0x65, 0x85, 0x39, 0xa5, 0x6f, 0xe0, 0x93, 0xa7, 0xa5,
	0xb3, 0x85, 0x80, 0x5e, 0x48, 0x75, 0xd2, 0x54, 0x95, 0xc7, 0x65, 0x97, 0x55, 0xe5, 0x89, 0x19,
	0xaa, 0xf2, 0xd0, 0xda, 0x65, 0x55, 0x29, 0xe9, 0xfe, 0x69, 0x41, 0xdb, 0xbc, 0x27, 0xd5, 0x79,
	0x0b, 0xf0, 0x51, 0xde, 0x1e, 0xb2, 0xf3, 0x9c, 0xfd, 0xd9, 0x4d, 0x88, 0xfc, 0x0a, 0x57, 0xc5,
	0x5d, 0xfa, 0x9a, 0x1f, 0x44, 0xc2, 0xb6, 0xf9, 0x7d, 0x7e, 0xfd, 0xce, 0x6b, 0xf8, 0x1c, 0xbc,
	0xbe, 0x5f, 0xd1, 0xc0, 0x9b, 0xd1, 0xb7, 0xbc, 0x5c, 0x02, 0x57, 0x4f, 0x59, 0xee, 0xf7, 0xd9,
	0x9d, 0xec, 0x4f, 0xf4, 0x05, 0xba, 0x89, 0xf7, 0xe3, 0x2d, 0xcb, 0xde, 0xa2, 0x26, 0x2d, 0x62,
	0xe2, 0xc0, 0xa5, 0xfa, 0xf6, 0x96, 0x23, 0xdd, 0x50, 0x9d, 0x9e, 0xc2, 0xeb, 0x7f, 0x2d, 0x68,
	0xff, 0xa2, 0xde, 0xcb, 0x05, 0x8a, 0x87, 0x38, 0x44, 0x72, 0x03, 0x17, 0x5e, 0x14, 0x91, 0xca,
	0x87, 0xd0, 0xad, 0x44, 0x7b, 0xcf, 0xc8, 0x77, 0x50, 0xff, 0xf1, 0x80, 0xe2, 0xf8, 0x3f, 0xb2,
	0x17, 0x95, 0xaf, 0x6a, 0xfe, 0x04, 0xf7, 0x9e, 0xa9, 0x9a, 0x13, 0x94, 0xef, 0x59, 0xf3, 0x5b,
	0x68, 0xdc, 0xe2, 0x16, 0x25, 0xbe, 0x9f, 0xee, 0xb7, 0x86, 0x86, 0x6f, 0xfe, 0x0b, 0x00, 0x00,
	0xff, 0xff, 0x7a, 0x93, 0x68, 0xca, 0x27, 0x08, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// YottaServiceClient is the client API for YottaService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type YottaServiceClient interface {
	Add(ctx context.Context, in *CardHolder, opts ...grpc.CallOption) (*CardHolder, error)
	Query(ctx context.Context, in *CardHolder, opts ...grpc.CallOption) (*CardHolderResponse, error)
	Get(ctx context.Context, in *CardHolder, opts ...grpc.CallOption) (*CardHolder, error)
	Delete(ctx context.Context, in *CardHolder, opts ...grpc.CallOption) (*CardHolder, error)
}

type yottaServiceClient struct {
	cc *grpc.ClientConn
}

func NewYottaServiceClient(cc *grpc.ClientConn) YottaServiceClient {
	return &yottaServiceClient{cc}
}

func (c *yottaServiceClient) Add(ctx context.Context, in *CardHolder, opts ...grpc.CallOption) (*CardHolder, error) {
	out := new(CardHolder)
	err := c.cc.Invoke(ctx, "/protosvr.YottaService/Add", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yottaServiceClient) Query(ctx context.Context, in *CardHolder, opts ...grpc.CallOption) (*CardHolderResponse, error) {
	out := new(CardHolderResponse)
	err := c.cc.Invoke(ctx, "/protosvr.YottaService/Query", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yottaServiceClient) Get(ctx context.Context, in *CardHolder, opts ...grpc.CallOption) (*CardHolder, error) {
	out := new(CardHolder)
	err := c.cc.Invoke(ctx, "/protosvr.YottaService/Get", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *yottaServiceClient) Delete(ctx context.Context, in *CardHolder, opts ...grpc.CallOption) (*CardHolder, error) {
	out := new(CardHolder)
	err := c.cc.Invoke(ctx, "/protosvr.YottaService/Delete", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// YottaServiceServer is the server API for YottaService service.
type YottaServiceServer interface {
	Add(context.Context, *CardHolder) (*CardHolder, error)
	Query(context.Context, *CardHolder) (*CardHolderResponse, error)
	Get(context.Context, *CardHolder) (*CardHolder, error)
	Delete(context.Context, *CardHolder) (*CardHolder, error)
}

// UnimplementedYottaServiceServer can be embedded to have forward compatible implementations.
type UnimplementedYottaServiceServer struct {
}

func (*UnimplementedYottaServiceServer) Add(ctx context.Context, req *CardHolder) (*CardHolder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Add not implemented")
}
func (*UnimplementedYottaServiceServer) Query(ctx context.Context, req *CardHolder) (*CardHolderResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Query not implemented")
}
func (*UnimplementedYottaServiceServer) Get(ctx context.Context, req *CardHolder) (*CardHolder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Get not implemented")
}
func (*UnimplementedYottaServiceServer) Delete(ctx context.Context, req *CardHolder) (*CardHolder, error) {
	return nil, status.Errorf(codes.Unimplemented, "method Delete not implemented")
}

func RegisterYottaServiceServer(s *grpc.Server, srv YottaServiceServer) {
	s.RegisterService(&_YottaService_serviceDesc, srv)
}

func _YottaService_Add_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardHolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YottaServiceServer).Add(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protosvr.YottaService/Add",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YottaServiceServer).Add(ctx, req.(*CardHolder))
	}
	return interceptor(ctx, in, info, handler)
}

func _YottaService_Query_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardHolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YottaServiceServer).Query(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protosvr.YottaService/Query",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YottaServiceServer).Query(ctx, req.(*CardHolder))
	}
	return interceptor(ctx, in, info, handler)
}

func _YottaService_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardHolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YottaServiceServer).Get(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protosvr.YottaService/Get",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YottaServiceServer).Get(ctx, req.(*CardHolder))
	}
	return interceptor(ctx, in, info, handler)
}

func _YottaService_Delete_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(CardHolder)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(YottaServiceServer).Delete(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/protosvr.YottaService/Delete",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(YottaServiceServer).Delete(ctx, req.(*CardHolder))
	}
	return interceptor(ctx, in, info, handler)
}

var _YottaService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "protosvr.YottaService",
	HandlerType: (*YottaServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "Add",
			Handler:    _YottaService_Add_Handler,
		},
		{
			MethodName: "Query",
			Handler:    _YottaService_Query_Handler,
		},
		{
			MethodName: "Get",
			Handler:    _YottaService_Get_Handler,
		},
		{
			MethodName: "Delete",
			Handler:    _YottaService_Delete_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "yotta.proto",
}
